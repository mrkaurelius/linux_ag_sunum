Linux Ağ Yönetimi 2020 Bahar Final Projesi
------------------------------------------

Abdulhamit Kumru 170202020
--------------------------

Kullanılan yazılımların versiyonları `Ubuntu Desktop / Server 18`,
`Virtual Box 6.1`

Makinelerin Klonlanması
^^^^^^^^^^^^^^^^^^^^^^^

Base olarak kullanacağımız makineyi oluşturduktan sonra klon makineyi
menüden sağ tıklayıp istediğimiz şekilde oluşturabiliyoruz. Biz daha az
yer kullanmak ve ortak networklere bağlanacağımız için `Linked Clone` ve
`Generate new MAC addresses for all network adapters` seçeneğini
kullanacağız.

image:./s1/clone.png[Klonlama,height=250]

image:./s1/clones.png[Klonlanmış Makineler,height=350]

Senaryo 1
~~~~~~~~~

NAT ile Host-Guest Ubuntu PC Bağlantısı
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Başlangıc olarak guest makinenin Network Adapterini NAT olarak seçiyoruz

image:./s1/upc1natconfig.png[NAT adapter ayarı,height=250]

SSH

host makineye NAT bağlantı ile erişebilmek için öncelikle gerekli
gerekli portu yönlendiriyoruz daha sonra gueste ssh ile bağlanabilmek
için open-ssh serveri apt ile yüklüyoruz.

image:./s1/natportfrw.png[Port forwarding,height=250]

[source,bash]
----
$ apt install opessh-server
----

ssh server servisinin ayarlarını dosyasından 22 numaralı portu ve
parolayı kabul edicek şekilde yapıyoruz.

[source,bash]
----
$ echo "Port 22" >> /etc/ssh/sshd_config
$ echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config
----

Ayarların aktif olmasi için ssh servisimizi yeniden başlatıyoruz.

[source,bash]
----
$ sudo service ssh restart
----

Forward ettiğimiz port üzerinden guest’e bağlabiliriz.

[source,bash]
----
$ ssh kumru@192.168.1.100 -p 22222 # hostun ip adresi
----

image:./s1/natsshscsh.png[Gueste ssh ile baglanma,height=250]

Ping
++++

Eğer ICMP port ile çalışsaydı aynı şekilde onunda portunu yönlendirip
gueste ping atabilirdik fakat ICMP TCP/UDP portları üzerinden
çalışmıyor.

image:./s1/cantping.png[Gueste ping gönderilemiyor,height=250]

Misafir Eklentileri
+++++++++++++++++++

Misafir eklentilerini guest makinye sanal disk takarak yükleyebiliyoruz
bu sayade hosttan gueste veya guestten hosta kopyala yapıştır ve dosya
sürekle bırak yapabiliyoruz. Eklentiyi yüklelemek zor değil sanal makine
penceresinden `Devices > Insert Guest Additions CD...` seçeneğini
seçince bize autorun.sh’ı çalıştırayım mı diye soruyor evet diyip
parolamızı girince eklentiler yükleniyor

image:./s1/misafireklentisiyukleme.png[autorun.sh çıktısı,height=250]

Sanal makinenin penceresinden `Devices > Drag and Drop`,
`Devices > Shared Clipboard` seçeneklerinden detaylı ayar yapılabilir.

image:./s1/dragdrop.png[Gueste eklentileri ile sürükle bırak,height=250]

https://github.com/mrkaurelius/linux_ag_sunum/blob/master/s1/dd.gif[gif
linki (github)]

Network Bridge ile Host, TinyCore Guest Bağlantısı
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Guestin network adapter ayarını Bridge Adapter olarak seçiyoruz

image:./s1/tcnetconf.png[Network Bridge Ayarı,height=250]

TinyCoreda IP’mizi ifconfig komutu ile kontol edebiliyoruz.

image:./s1/tcip.png[ifconfig çıktısı,height=250]

Network Bridge ile Guest LANdaki makine gibi kullanılabilir.

SSH
+++

tce-load programı ile TinyCoreda program yükleyebiliyoruz.

[source,bash]
----
# openssh client/server paketini yukleme
tce-load -w -i openssh.tcz
# ssh/sshd ayarlari
cp /usr/local/etc/ssh/ssh_config.orig /usr/local/etc/ssh/ssh_config
cp /usr/local/etc/ssh/sshd_config.orig /usr/local/etc/ssh/sshd_config
echo "Port 22" >> /usr/local/etc/ssh/sshd_config
echo "PasswordAuthentication yes" >> /usr/local/etc/ssh/sshd_config
# servisi calistirma
/usr/local/etc/init.d/openssh start
----

image:./s1/tcssh.png[Gueste ssh bağlantısı,height=250]

Ping
++++

image:./s1/tcping.png[Gueste ping gönderebiliyoruz,height=250]

Host only Adapter ile Host, Ubuntu Server Guest Bağlantısı
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Host only Adapter kullanabilmek için öncelikle Host Network oluşturmak
gerekli. Ana Menüden `File > Host Network Manager...`i seçip create
tıklıyoruz ve Network Oluşuyor.

image:./s1/hostnetworkmanager.png[Host Network,height=250]

Guestimizin Network adapterini Host only Adapter seçip alt seçenekten
oluşturduğumuz Host Network’ü seçiyoruz.

image:./s1/hostonlyuserver1advanced.png[Host Only Adapter
Ayarı,height=250]

yaml fromatındaki `/etc/netplan/50-cloud-init.yaml` dosyasını Network
Interfacemizi DHCP ile yönetilmesi için ayarlıyoruz

[source,yaml]
----
# /etc/netplan/50-cloud-init.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s9:
      dhcp4: yes
----

Yeni ayarların kullanması için netplan komutunu çalıştırıyoruz.

[source,bash]
----
$ sudo netplan --debug apply
----

image:./s1/hostonlyuserverip.png[Host-only Adapterin Host Networkten
aldığı IP.,height=250]

SSH
+++

NAT ile Host, Guest Ubuntu PC Bağlantısı bölümünde yaptığımız komutları
burada tekrar ediyoruz.

[source,bash]
----
$ apt install opessh-server
$ echo "Port 22" >> /etc/ssh/sshd_config
$ echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config
$ sudo service ssh restart
----

userver1’e SSH ile bağlanıyoruz.

[source,bash]
----
$ ssh kumru@192.168.56.101
----

image:./s1/hostonlysshuserver.png[Gueste ssh ile bağlanma,height=250]

Ping
++++

image:./s1/hostonlypinguserver.png[Gueste Ping gönderme,height=250]

Senaryo 2
~~~~~~~~~

Internal Network ile Host-Guest, Guest-Guest Bağlatısı
++++++++++++++++++++++++++++++++++++++++++++++++++++++

Internal Network Ayarı
++++++++++++++++++++++

Senaryo geregi ip Ubuntu Serverlarin ipleri

`host: 192.168.0.1 userver1: 192.168.0.2 userver2: 192.168.0.3 userver3: 192.168.0.4`

Internal network için Network Adapterin modunu seçmek yeterli.

image:./s2/userverinternalconf.png[Internal Network Ayarları,height=250]

image:./s2/vbnetconf.png[userver1,height=250]

image:./s2/vbnetconf.png[userver2,height=250]

image:./s2/vbnetconf.png[userver3,height=250]

Netplan Ayarları
++++++++++++++++

netplan ayarlarını Senaryo 1 de yaptığımız gibi yapıyoruz. Farklı olarak
dhcp olmadan statik bir şekilde IP alıyoruz

* userver1

[source,yaml]
----
# /etc/netplan/50-cloud-init.yaml
# S:0 R:2 userver1
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.0.2/24
      gateway4: 192.168.0.1
----

* userver2

[source,yaml]
----
# /etc/netplan/50-cloud-init.yaml
# S:0 R:2 userver2
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.0.3/24
      gateway4: 192.168.0.1
----

* userver3

[source,yaml]
----
# /etc/netplan/50-cloud-init.yaml
# S:0 R:2 userver3
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.0.4/24
      gateway4: 192.168.0.1
----

SSH
+++

SSH server yüklediğimiz için ve diğer makineler klon olduğu için bir
daha SSH yükleme ve ayarlamaya gerek yok. Guestler arasında SSH
bağlantısı yapılabiliyor.

image:./s2/userverguestssh.png[Guestler Arasında SSH,height=250]

image:./s2/userverguestssh2.png[Guestler Arasında SSH,height=250]

Internal Networkte hostdan guestlere ulaşmak mümkün değil.

image:./s2/userverhostssh.png[Hosttan Gueste SSH denemesi,height=250]

Ping
++++

Guestler birbirlerine ulaşabildiği için birbirlerine ping göndermeleri
mümkün.

image:./s2/userverguestping.png[Guestler Arası Ping,height=250]

SCP
+++

Gerek olmasada boş dosya göndermek yerine sıfır yazılmış 100M
büyüklüğünde dosyalar gönderelim.

[source,bash]
----
# dosyalari hazirlama
$ dd if=/dev/zero of=abdulhamit.txt count=100 bs=1M
$ cat abdulhamit.txt > kumru.txt > 170202020.txt
# scp komutu
$ scp *.txt 192.168.0.3:/home/kumru/
----

image:./s2/userverscp.png[scp Komutu Çıktısı,height=250]

Senaryo 3
~~~~~~~~~

Bu senaryoda bir ağdan diğer ağa routing yapmamız istenmekte. Router
yazılımı olarak Quaggayı kullanacağız.

image:./s3/networkdiagram.png[Şema,height=350]

* dahili1 +
`uPC1 192.168.1.1` +
`userver1 192.168.1.254`
* dahili2 +
`uPC2 192.168.2.1` +
`userver2 192.168.2.254`
* dahili 3 `userver1 192.168.100.1` +
`userver2 192.168.100.2`

Network Ayarları
^^^^^^^^^^^^^^^^

Virtual Box Network Ayarları
++++++++++++++++++++++++++++

Serverlardaki adapter4 hariç diğer adaptörler senaryo gerekleri için
kullandık. Adapter4 ü ise sunucuları yönetmek için kullandık.

image:./s3/pc1vbn.png[uPC1,height=250]

image:./s3/pc2vbn.png[uPC2,height=250]

image:./s3/s1vbn.png[userver1,height=250]

image:./s3/s2vbn.png[userver2,height=250]

PC’lerin netplan Ayarları
+++++++++++++++++++++++++

uPC1 netplan ayarları

[source,yaml]
----
# uPC1 
network:
  version: 2
  renderer: networkd
  ethernets: 
    enp0s3:
      dhcp4: yes
    enp0s8:
      dhcp4: no
      addresses:
      - 192.168.1.1/24
      gateway4: 192.168.1.254
      nameservers:
          addresses: [8.8.8.8, 1.1.1.1]
      routes:
      - to: 192.168.0.0/16
        via: 192.168.1.254
----

uPC2 netplan ayarları

[source,yaml]
----
# uPC2
network:
  version: 2
  renderer: networkd
  ethernets: 
    enp0s3:
      dhcp4: yes
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.2.1/24
      gateway4: 192.168.2.254
      nameservers:
          addresses: [8.8.8.8, 1.1.1.1]
      routes: 
      - to: 192.168.0.0/16
        via: 192.168.1.254
----

Server’lerin Network Ayarları
+++++++++++++++++++++++++++++

Serverlerin nat ayarları

[source,yaml]
----
# serverler için ortak nat ayarı
network:
  ethernets:
    enp0s3:
      dhcp4: true
  version: 2
----

userver2

[source,yaml]
----
# userver2 
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.0.1/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
    enp0s9:
      dhcp4: no
      addresses:
        - 192.168.100.2/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
    enp0s10:
      dhcp4: no
      addresses:
        - 192.168.1.201/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
----

userver1

[source,yaml]
----
# userver1 
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s8:
      dhcp4: no
      addresses:
        - 192.168.0.1/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
    enp0s9:
      dhcp4: no
      addresses:
        - 192.168.100.1/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
    enp0s10:
      dhcp4: no
      addresses:
        - 192.168.1.200/24
      #gateway4: 192.168.0.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
----

Serverlera Quagga Kurulumu ve Ayarları
++++++++++++++++++++++++++++++++++++++

Buradaki bilgiler
http://www.brianlinkletter.com/how-to-build-a-network-of-linux-routers-using-quagga/[brianlinkletter.com]
,
https://ixnfo.com/en/installing-quagga-on-ubuntu-server-18.html[ixnfo.com]
dan alınmıştır.

Quagga Kurulum Scripti
++++++++++++++++++++++

[source,bash]
----
#!/bin/bash
# quagga installer
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

sudo apt install quagga quagga-doc
sudo cat > /etc/quagga/daemons << EOF
zebra=yes
bgpd=no
ospfd=yes
ospf6d=no
ripd=no
ripngd=no
isisd=no
babeld=no
EOF

echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
cp /usr/share/doc/quagga-core/examples/vtysh.conf.sample /etc/quagga/vtysh.conf
cp /usr/share/doc/quagga-core/examples/zebra.conf.sample /etc/quagga/zebra.conf
cp /usr/share/doc/quagga-core/examples/bgpd.conf.sample /etc/quagga/bgpd.conf
chown quagga:quagga /etc/quagga/*.conf
chown quagga:quaggavty /etc/quagga/vtysh.conf
chmod 640 /etc/quagga/*.conf
service zebra start
service bgpd start
systemctl enable zebra.service
systemctl enable bgpd.service
echo 'VTYSH_PAGER=more' >>/etc/environment 
echo 'export VTYSH_PAGER=more' >>/etc/bash.bashrc
----

Quagga Ayar Scriptleri
++++++++++++++++++++++

* userver1 +

[source,bash]
----
#!/bin/bash
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi
cat >> /etc/quagga/ospfd.conf << EOF
interface enp0s8
interface enp0s9
interface lo
router ospf
 passive-interface enp0s8
 network 192.168.1.0/24 area 0.0.0.0
 network 192.168.100.0/24 area 0.0.0.0
line vty
EOF
cat >> /etc/quagga/zebra.conf << EOF
interface enp0s8
 ip address 192.168.1.254/24
 ipv6 nd suppress-ra
interface enp0s9
 ip address 192.168.100.1/24
 ipv6 nd suppress-ra
interface lo
ip forwarding
line vty
EOF
sudo service zebra restart
sudo service bgpd restart
----

* userver2 +

[source,bash]
----
#!/bin/bash
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi
cat >> /etc/quagga/ospfd.conf << EOF
interface enp0s8
interface enp0s9
interface lo
router ospf
 passive-interface enp0s8
 network 192.168.2.0/24 area 0.0.0.0
 network 192.168.100.0/24 area 0.0.0.0
line vty
EOF
cat >> /etc/quagga/zebra.conf << EOF
interface enp0s8
 ip address 192.168.2.254/24
 ipv6 nd suppress-ra
interface enp0s9
 ip address 192.168.100.2/24
 ipv6 nd suppress-ra
interface lo
ip forwarding
line vty
EOF
sudo service zebra restart
sudo service bgpd restart
----

Ayar sontrası cihazların durumu
+++++++++++++++++++++++++++++++

image:./s3/server1ipar.png[Ubuntu Server1 ip a, ip route Komut
çıktısı,height=250]

image:./s3/server2ipar.png[Ubuntu Server2 ip a, ip route Komut
çıktısı,height=250]

image:./s3/dt1ipar.png[Ubuntu Desktop1 (uPC1) ip a, ip route Komut
çıktısı,height=250]

image:./s3/dt2ipar.png[Ubuntu Desktop2 (uPC2) ip a, ip route Komut
çıktısı,height=250]

traceroute, paket takibi
++++++++++++++++++++++++

Traceroute komutu ile paketlerin izlediği yolun takibini yapabiliriz.

image:./s3/pc1tall.png[uPC1 -> uPC2, uPC1 -> userver1, uPC1 ->
userver2,height=250]
